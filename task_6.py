# –ó–∞–¥–∞–Ω–∏–µ No6
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–∏ÃÜ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
# üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
# üìå –ö–∞–∂–¥—ã–∏ÃÜ –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç:
# ‚óã –∏–º—è —Ñ–∞–∏ÃÜ–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–∏ÃÜ–ª,
# ‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
# üìå –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–∏ÃÜ —Ñ–∞–∏ÃÜ–ª –∏—Å–ø–æ–ª—å–∑—É—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
import argparse
import logging
import os.path
from collections import namedtuple

FORMAT = '{funcName} -{asctime} -{msg}'

logging.basicConfig(level=logging.NOTSET, filename='path.log', filemode='a', encoding='utf-8', format=FORMAT,
                    style='{')
log = logging.getLogger(__name__)
File = namedtuple('File', ['extension', 'file_name', 'parent_dir'])
Folder = namedtuple('Folder', ['dir_name', 'dir_access', 'parent_dir'])


def parse_path():
    results = []
    parser = argparse.ArgumentParser(description='getting path  from console')
    parser.add_argument('file_path', type=str,
                        help='enter path to file or directory ')
    args_in = parser.parse_args()
    for root, dirs, files in os.walk(args_in.file_path):
        for file in files:
            file_name, extension = os.path.splitext(file)
            parent_dir = root.split('/')[-1]
            file = File(extension, file_name, parent_dir)
            results.append(file)
            log.info(file)
        for dir_ in dirs:
            path = os.path.join(root, dir_)
            dir_name = dir_
            if os.access(path, os.X_OK):
                dir_access = 'X'
            elif os.access(path, os.W_OK):
                dir_access = 'W'
            else:
                dir_access = 'R'
            parent_dir = root.split('/')[-1]
            folder = Folder(dir_name, dir_access, parent_dir)
            results.append(folder)
            log.info(folder)
        return results


if __name__ == '__main__':
    print(parse_path())
